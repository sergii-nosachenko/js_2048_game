{"version":3,"sources":["scripts/classes/Cell.js","../node_modules/party-js/lib/settings.js","../node_modules/party-js/lib/util/config.js","../node_modules/party-js/lib/components/circle.js","../node_modules/party-js/lib/systems/math.js","../node_modules/party-js/lib/components/color.js","../node_modules/party-js/lib/components/spline.js","../node_modules/party-js/lib/components/gradient.js","../node_modules/party-js/lib/components/numericSpline.js","../node_modules/party-js/lib/components/rect.js","../node_modules/party-js/lib/components/vector.js","../node_modules/party-js/lib/components/index.js","../node_modules/party-js/lib/util/rotation.js","../node_modules/party-js/lib/util/rules.js","../node_modules/party-js/lib/util/lazy.js","../node_modules/party-js/lib/util/index.js","../node_modules/party-js/lib/containers.js","../node_modules/party-js/lib/debug.js","../node_modules/party-js/lib/systems/random.js","../node_modules/party-js/lib/systems/variation.js","../node_modules/party-js/lib/particles/options/emitterOptions.js","../node_modules/party-js/lib/systems/sources.js","../node_modules/party-js/lib/particles/options/emissionOptions.js","../node_modules/party-js/lib/particles/options/renderOptions.js","../node_modules/party-js/lib/particles/options/index.js","../node_modules/party-js/lib/particles/particle.js","../node_modules/party-js/lib/particles/emitter.js","../node_modules/party-js/lib/systems/shapes.js","../node_modules/party-js/lib/particles/renderer.js","../node_modules/party-js/lib/scene.js","../node_modules/party-js/lib/systems/modules.js","../node_modules/party-js/lib/templates/confetti.js","../node_modules/party-js/lib/templates/sparkles.js","../node_modules/party-js/lib/templates/index.js","../node_modules/party-js/lib/index.js","scripts/classes/Game2048.js","scripts/main.js"],"names":["Cell","element","value","_element","_value","number","innerText","className","replace","classList","add","state","offsetWidth","dataset","module","exports","require","party","Game2048","container","fieldSize","_fieldSize","_container","_isPlaying","_isActive","_score","_maxValue","_field","_dom","window","game2048","games","keyboardHandler","push","event","activeGame","find","game","active","preventDefault","code","moveLeft","moveRight","moveUp","moveDown","start","restart","index","findIndex","length","_activateGame","forEach","_renderGame","_initField","_initHandlers","Element","TypeError","document","querySelector","Error","innerHTML","repeat","gameContainer","field","score","size","controls","smaller","bigger","rows","querySelectorAll","messages","win","lose","hint","row","cellsRow","cells","cell","fieldData","hasBeenChanged","i","j","isMerged","maxValue","_keyboardHandler","body","addEventListener","startClickHandler","xStart","yStart","_initGame","bind","touches","clientX","clientY","xMoved","yMoved","Math","abs","min","max","floor","random","count","freeCells","_getFreeCells","randomIndex","_getRandomInt","randomValue","flat","filter","_deactivateGames","scrollIntoView","direction","newFieldData","rowData","previousCell","cellsCount","unshift","colsData","colData","_fillField","_checkGameWin","_insertRandomCells","_checkGameLose","hasTwoSameCellsInARow","some","hasTwoSameCellsInACol","_userHasWon","_isNextMovementPossible","_userHasLost","_toggleStartControl","_hideMessages","confetti","variation","range","shapes","key","toggle","isStart","remove","setAttribute","_clearField","ceil","removeAttribute","_moveCells","addGameBtn","createElement","before","create","baseGame"],"mappings":"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","file":"main.269801df.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nclass Cell {\n  constructor(element, value) {\n    this._element = element;\n    this._value = value || 0;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(number) {\n    this._value = number;\n    this._element.innerText = number || ''; // ignore zero\n\n    this._element.className = this._element.className\n      .replace(/( ?field__cell--\\d+)/, '');\n    this._element.classList.add(`field__cell--${number}`);\n    this.state = '';\n  }\n\n  set state(state = '') {\n    void this._element.offsetWidth; // trick to restart animation\n    this._element.dataset.state = state;\n  }\n}\n\nmodule.exports = Cell;\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.settings = void 0;\r\nexports.settings = {\r\n    debug: false,\r\n    gravity: 800,\r\n    zIndex: 99999,\r\n    respectReducedMotion: true,\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.overrideDefaults = void 0;\r\n/**\r\n * Replaces the supplied defaults with the properties specified in the overrides.\r\n * This returns a new object.\r\n */\r\nfunction overrideDefaults(defaults, overrides) {\r\n    return Object.assign({}, defaults, overrides);\r\n}\r\nexports.overrideDefaults = overrideDefaults;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Circle = void 0;\r\n/**\r\n * Represents a circle.\r\n */\r\nvar Circle = /** @class */ (function () {\r\n    /**\r\n     * Creates a new circle at the specified coordinates, with a default radius of 0.\r\n     */\r\n    function Circle(x, y, radius) {\r\n        if (radius === void 0) { radius = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n    }\r\n    Circle.zero = new Circle(0, 0);\r\n    return Circle;\r\n}());\r\nexports.Circle = Circle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.approximately = exports.clamp = exports.invlerp = exports.slerp = exports.lerp = exports.epsilon = exports.rad2deg = exports.deg2rad = void 0;\r\n/**\r\n * Constant coefficient to convert degrees to radians.\r\n */\r\nexports.deg2rad = Math.PI / 180;\r\n/**\r\n * Constant coefficient to convert radians to degrees.\r\n */\r\nexports.rad2deg = 180 / Math.PI;\r\n/**\r\n * A small value to approximately compare values.\r\n */\r\nexports.epsilon = 0.000001;\r\n/**\r\n * Linearly interpolates between a and b by t.\r\n */\r\nfunction lerp(a, b, t) {\r\n    return (1 - t) * a + t * b;\r\n}\r\nexports.lerp = lerp;\r\n/**\r\n * Smoothly interpolates between a and b by t (using cosine interpolation).\r\n */\r\nfunction slerp(a, b, t) {\r\n    return lerp(a, b, (1 - Math.cos(t * Math.PI)) / 2);\r\n}\r\nexports.slerp = slerp;\r\n/**\r\n * Inversely lerps v between a and b to find t.\r\n */\r\nfunction invlerp(a, b, v) {\r\n    return (v - a) / (b - a);\r\n}\r\nexports.invlerp = invlerp;\r\n/**\r\n * Clamps the specified value between a minimum and a maximum.\r\n */\r\nfunction clamp(value, min, max) {\r\n    return Math.min(max, Math.max(min, value));\r\n}\r\nexports.clamp = clamp;\r\n/**\r\n * Checks if a is approximately equal to b.\r\n */\r\nfunction approximately(a, b) {\r\n    return Math.abs(a - b) < exports.epsilon;\r\n}\r\nexports.approximately = approximately;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Color = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a color consisting of RGB values. The components of it are\r\n * represented as integers in the range 0 to 255.\r\n *\r\n * @example\r\n * ```ts\r\n * const a = new Color(12, 59, 219);\r\n * const b = Color.fromHex(\"#ffa68d\");\r\n * const result = a.mix(b);\r\n * ```\r\n */\r\nvar Color = /** @class */ (function () {\r\n    /**\r\n     * Creates a new color instance from the specified RGB components.\r\n     */\r\n    function Color(r, g, b) {\r\n        this.values = new Float32Array(3);\r\n        this.rgb = [r, g, b];\r\n    }\r\n    Object.defineProperty(Color.prototype, \"r\", {\r\n        /**\r\n         * Returns the r-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the r-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"g\", {\r\n        /**\r\n         * Returns the g-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the g-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"b\", {\r\n        /**\r\n         * Returns the b-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the b-component of the color.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"rgb\", {\r\n        /**\r\n         * Returns the rgb-components of the color, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.r, this.g, this.b];\r\n        },\r\n        /**\r\n         * Simultaneously updates the rgb-components of the color, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.r = values[0];\r\n            this.g = values[1];\r\n            this.b = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Mixes the two color together with an optional mixing weight.\r\n     * This weight is 0.5 by default, perfectly averaging the color.\r\n     */\r\n    Color.prototype.mix = function (color, weight) {\r\n        if (weight === void 0) { weight = 0.5; }\r\n        return new Color(math_1.lerp(this.r, color.r, weight), math_1.lerp(this.g, color.g, weight), math_1.lerp(this.b, color.b, weight));\r\n    };\r\n    /**\r\n     * Returns the hexadecimal representation of the color, prefixed by '#'.\r\n     */\r\n    Color.prototype.toHex = function () {\r\n        var hex = function (v) { return v.toString(16).padStart(2, \"0\"); };\r\n        return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the color.\r\n     */\r\n    Color.prototype.toString = function () {\r\n        return \"rgb(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a color from the specified hexadecimal string.\r\n     * This string can optionally be prefixed by '#'.\r\n     */\r\n    Color.fromHex = function (hex) {\r\n        if (hex.startsWith(\"#\")) {\r\n            hex = hex.substr(1);\r\n        }\r\n        return new Color(parseInt(hex.substr(0, 2), 16), parseInt(hex.substr(2, 2), 16), parseInt(hex.substr(4, 2), 16));\r\n    };\r\n    /**\r\n     * Creates a color from the specified HSL components.\r\n     *\r\n     * @see https://stackoverflow.com/a/9493060/5507624\r\n     */\r\n    Color.fromHsl = function (h, s, l) {\r\n        h /= 360;\r\n        s /= 100;\r\n        l /= 100;\r\n        if (s === 0) {\r\n            return new Color(l, l, l);\r\n        }\r\n        else {\r\n            var hue2rgb = function (p, q, t) {\r\n                if (t < 0)\r\n                    t += 1;\r\n                if (t > 1)\r\n                    t -= 1;\r\n                if (t < 1 / 6)\r\n                    return p + (q - p) * 6 * t;\r\n                if (t < 1 / 2)\r\n                    return q;\r\n                if (t < 2 / 3)\r\n                    return p + (q - p) * (2 / 3 - t) * 6;\r\n                return p;\r\n            };\r\n            var to255 = function (v) { return Math.min(255, 256 * v); };\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            return new Color(to255(hue2rgb(p, q, h + 1 / 3)), to255(hue2rgb(p, q, h)), to255(hue2rgb(p, q, h - 1 / 3)));\r\n        }\r\n    };\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Color.white = new Color(255, 255, 255);\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Color.black = new Color(0, 0, 0);\r\n    return Color;\r\n}());\r\nexports.Color = Color;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Spline = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a spline that can be used to continueously evaluate a function\r\n * between keys. The base implementation is kept generic, so the functionality\r\n * can easily be implemented for similar constructs, such as gradients.\r\n */\r\nvar Spline = /** @class */ (function () {\r\n    /**\r\n     * Creates a new spline instance, using the specified keys.\r\n     * Note that you have to pass at least one key.\r\n     */\r\n    function Spline() {\r\n        var keys = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            keys[_i] = arguments[_i];\r\n        }\r\n        if (keys.length === 0) {\r\n            throw new Error(\"Splines require at least one key.\");\r\n        }\r\n        if (Array.isArray(keys[0])) {\r\n            throw new Error(\"You are trying to pass an array to the spline constructor, which is not supported. \" +\r\n                \"Try to spread the array into the constructor instead.\");\r\n        }\r\n        this.keys = keys;\r\n    }\r\n    /**\r\n     * Evaluates the spline at the given time.\r\n     */\r\n    Spline.prototype.evaluate = function (time) {\r\n        if (this.keys.length === 0) {\r\n            throw new Error(\"Attempt to evaluate a spline with no keys.\");\r\n        }\r\n        if (this.keys.length === 1) {\r\n            // The spline only contains one key, therefore is constant.\r\n            return this.keys[0].value;\r\n        }\r\n        // Sort the keys and figure out the first key above the passed time.\r\n        var ascendingKeys = this.keys.sort(function (a, b) { return a.time - b.time; });\r\n        var upperKeyIndex = ascendingKeys.findIndex(function (g) { return g.time > time; });\r\n        // If the found index is either 0 or -1, the specified time falls out\r\n        // of the range of the supplied keys. In that case, the value of the\r\n        // nearest applicant key is returned.\r\n        if (upperKeyIndex === 0) {\r\n            return ascendingKeys[0].value;\r\n        }\r\n        if (upperKeyIndex === -1) {\r\n            return ascendingKeys[ascendingKeys.length - 1].value;\r\n        }\r\n        // Otherwise, find the bounding keys, and extrapolate the time between\r\n        // the two. This is then used to interpolate between the two keys,\r\n        // using the provided implementation.\r\n        var lowerKey = ascendingKeys[upperKeyIndex - 1];\r\n        var upperKey = ascendingKeys[upperKeyIndex];\r\n        var containedTime = math_1.invlerp(lowerKey.time, upperKey.time, time);\r\n        return this.interpolate(lowerKey.value, upperKey.value, containedTime);\r\n    };\r\n    return Spline;\r\n}());\r\nexports.Spline = Spline;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Gradient = void 0;\r\nvar spline_1 = require(\"./spline\");\r\n/**\r\n * Represents a gradient that can be used to interpolate between multiple color.\r\n */\r\nvar Gradient = /** @class */ (function (_super) {\r\n    __extends(Gradient, _super);\r\n    function Gradient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Interpolates between two color on the gradient.\r\n     */\r\n    Gradient.prototype.interpolate = function (a, b, t) {\r\n        return a.mix(b, t);\r\n    };\r\n    /**\r\n     * Returns a solid gradient from the given color.\r\n     */\r\n    Gradient.solid = function (color) {\r\n        return new Gradient({ value: color, time: 0.5 });\r\n    };\r\n    /**\r\n     * Returns a gradient with evenly spaced keys from the given colors.\r\n     */\r\n    Gradient.simple = function () {\r\n        var colors = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            colors[_i] = arguments[_i];\r\n        }\r\n        var step = 1 / (colors.length - 1);\r\n        return new (Gradient.bind.apply(Gradient, __spreadArray([void 0], colors.map(function (color, index) { return ({\r\n            value: color,\r\n            time: index * step,\r\n        }); }))))();\r\n    };\r\n    return Gradient;\r\n}(spline_1.Spline));\r\nexports.Gradient = Gradient;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NumericSpline = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\nvar spline_1 = require(\"./spline\");\r\n/**\r\n * Represents a spline that can take numeric values.\r\n */\r\nvar NumericSpline = /** @class */ (function (_super) {\r\n    __extends(NumericSpline, _super);\r\n    function NumericSpline() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Smoothly interpolates between two keys on the spline.\r\n     */\r\n    NumericSpline.prototype.interpolate = function (a, b, t) {\r\n        return math_1.slerp(a, b, t);\r\n    };\r\n    return NumericSpline;\r\n}(spline_1.Spline));\r\nexports.NumericSpline = NumericSpline;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Rect = void 0;\r\n/**\r\n * Represents a rectangle with an origin and size.\r\n */\r\nvar Rect = /** @class */ (function () {\r\n    function Rect(x, y, width, height) {\r\n        if (width === void 0) { width = 0; }\r\n        if (height === void 0) { height = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    /**\r\n     * Returns a new document-space rectangle from the viewport's bounds.\r\n     */\r\n    Rect.fromScreen = function () {\r\n        return new Rect(window.scrollX, window.scrollY, window.innerWidth, window.innerHeight);\r\n    };\r\n    /**\r\n     * Returns a new document-space rectangle from the specified element.\r\n     */\r\n    Rect.fromElement = function (element) {\r\n        var r = element.getBoundingClientRect();\r\n        return new Rect(window.scrollX + r.x, window.scrollY + r.y, r.width, r.height);\r\n    };\r\n    Rect.zero = new Rect(0, 0);\r\n    return Rect;\r\n}());\r\nexports.Rect = Rect;\r\n","\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Vector = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a structure used to process vectors.\r\n *\r\n * @remarks\r\n * Note that the operations in this class will **not** modify the original vector,\r\n * except for the property assignments. This is to ensure that vectors are not\r\n * unintentionally modified.\r\n *\r\n * @example\r\n * ```ts\r\n * const vectorA = new Vector(1, 3, 5);\r\n * const vectorB = new Vector(2, 3, 1);\r\n * const vectorC = vectorA.add(vectorB); // (3, 6, 6)\r\n * ```\r\n */\r\nvar Vector = /** @class */ (function () {\r\n    /**\r\n     * Creates a new vector with optional x-, y-, and z-components.\r\n     * Omitted components are defaulted to 0.\r\n     */\r\n    function Vector(x, y, z) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        this.values = new Float32Array(3);\r\n        this.xyz = [x, y, z];\r\n    }\r\n    Object.defineProperty(Vector.prototype, \"x\", {\r\n        /**\r\n         * Returns the x-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the x-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"y\", {\r\n        /**\r\n         * Returns the y-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the y-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"z\", {\r\n        /**\r\n         * Returns the z-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the z-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"xyz\", {\r\n        /**\r\n         * Returns the xyz-components of the vector, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.x, this.y, this.z];\r\n        },\r\n        /**\r\n         * Simultaneously updates the xyz-components of the vector, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.values[0] = values[0];\r\n            this.values[1] = values[1];\r\n            this.values[2] = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the length of the vector.\r\n     */\r\n    Vector.prototype.magnitude = function () {\r\n        return Math.sqrt(this.sqrMagnitude());\r\n    };\r\n    /**\r\n     * Returns the squared length of the vector.\r\n     */\r\n    Vector.prototype.sqrMagnitude = function () {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    };\r\n    /**\r\n     * Adds the two vectors together, component-wise.\r\n     */\r\n    Vector.prototype.add = function (vector) {\r\n        return new Vector(this.x + vector.x, this.y + vector.y, this.z + vector.z);\r\n    };\r\n    /**\r\n     * Subtracts the right vector from the left one, component-wise.\r\n     */\r\n    Vector.prototype.subtract = function (vector) {\r\n        return new Vector(this.x - vector.x, this.y - vector.y, this.z - vector.z);\r\n    };\r\n    /**\r\n     * Scales the lefthand vector by another vector or by a number.\r\n     */\r\n    Vector.prototype.scale = function (scalar) {\r\n        if (typeof scalar === \"number\") {\r\n            return new Vector(this.x * scalar, this.y * scalar, this.z * scalar);\r\n        }\r\n        else {\r\n            return new Vector(this.x * scalar.x, this.y * scalar.y, this.z * scalar.z);\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes the vector to a length of 1. If the length was previously zero,\r\n     * then a zero-length vector will be returned.\r\n     */\r\n    Vector.prototype.normalized = function () {\r\n        var magnitude = this.magnitude();\r\n        if (magnitude !== 0) {\r\n            return this.scale(1 / magnitude);\r\n        }\r\n        return new (Vector.bind.apply(Vector, __spreadArray([void 0], this.xyz)))();\r\n    };\r\n    /**\r\n     * Returns the angle between two vectors, in degrees.\r\n     */\r\n    Vector.prototype.angle = function (vector) {\r\n        return (math_1.rad2deg *\r\n            Math.acos((this.x * vector.x + this.y * vector.y + this.z * vector.z) /\r\n                (this.magnitude() * vector.magnitude())));\r\n    };\r\n    /**\r\n     * Returns the cross-product of two vectors.\r\n     */\r\n    Vector.prototype.cross = function (vector) {\r\n        return new Vector(this.y * vector.z - this.z * vector.y, this.z * vector.x - this.x * vector.z, this.x * vector.y - this.y * vector.x);\r\n    };\r\n    /**\r\n     * returns the dot-product of two vectors.\r\n     */\r\n    Vector.prototype.dot = function (vector) {\r\n        return (this.magnitude() *\r\n            vector.magnitude() *\r\n            Math.cos(math_1.deg2rad * this.angle(vector)));\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the vector.\r\n     */\r\n    Vector.prototype.toString = function () {\r\n        return \"Vector(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a new vector from an angle, in degrees. Note that the z-component will be zero.\r\n     */\r\n    Vector.from2dAngle = function (angle) {\r\n        return new Vector(Math.cos(angle * math_1.deg2rad), Math.sin(angle * math_1.deg2rad));\r\n    };\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Vector.zero = new Vector(0, 0, 0);\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Vector.one = new Vector(1, 1, 1);\r\n    /**\r\n     * Returns (1, 0, 0).\r\n     */\r\n    Vector.right = new Vector(1, 0, 0);\r\n    /**\r\n     * Returns (0, 1, 0).\r\n     */\r\n    Vector.up = new Vector(0, 1, 0);\r\n    /**\r\n     * Returns (0, 0, 1).\r\n     */\r\n    Vector.forward = new Vector(0, 0, 1);\r\n    return Vector;\r\n}());\r\nexports.Vector = Vector;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./circle\"), exports);\r\n__exportStar(require(\"./color\"), exports);\r\n__exportStar(require(\"./gradient\"), exports);\r\n__exportStar(require(\"./numericSpline\"), exports);\r\n__exportStar(require(\"./rect\"), exports);\r\n__exportStar(require(\"./vector\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rotationToNormal = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Converts the specified euler rotation (in degrees) into the corresponding normal vector.\r\n *\r\n * @remarks\r\n * The normal is calculated by placing a (figurative) plane in a coordinate-system's\r\n * origin, and rotating it by the specified angles. Note that the z-component of the\r\n * rotation is irrelevant for the normal and can be ignored. Then, two vectors\r\n * describing the orientation of the plane are calculated. Their cross product\r\n * denotes the normal vector.\r\n *\r\n * @param rotation The euler rotation angles (in degrees) to calculate the normal for.\r\n */\r\nfunction rotationToNormal(rotation) {\r\n    var alpha = rotation.x * math_1.deg2rad;\r\n    var beta = rotation.y * math_1.deg2rad;\r\n    var a = new components_1.Vector(Math.cos(beta), 0, Math.sin(beta));\r\n    var b = new components_1.Vector(0, Math.cos(alpha), Math.sin(alpha));\r\n    return a.cross(b);\r\n}\r\nexports.rotationToNormal = rotationToNormal;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.despawningRules = void 0;\r\n/**\r\n * Contains a set of pre-defined particle despawning rules.\r\n */\r\nexports.despawningRules = {\r\n    /**\r\n     * A rule that despawns a particle once its lifetime is over.\r\n     */\r\n    lifetime: function (particle) {\r\n        return particle.lifetime <= 0;\r\n    },\r\n    /**\r\n     * A rule that despawns a particle once its y-coordinate is outside of the document.\r\n     */\r\n    bounds: function (particle) {\r\n        // Get document height: https://stackoverflow.com/a/44077777/5507624\r\n        var height = document.documentElement.scrollHeight;\r\n        return particle.location.y > height;\r\n    },\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Lazy = void 0;\r\n/**\r\n * A wrapper class to lazily initialize a value.\r\n * Supports custom factory and predicate methods.\r\n */\r\nvar Lazy = /** @class */ (function () {\r\n    function Lazy(factory, exists) {\r\n        if (exists === void 0) { exists = Lazy.defaultExists; }\r\n        this.factory = factory;\r\n        this.exists = exists;\r\n    }\r\n    Object.defineProperty(Lazy.prototype, \"current\", {\r\n        /**\r\n         * The current value of the lazy object. Will be initialized, if the 'exists'\r\n         * predicate doesn't match.\r\n         */\r\n        get: function () {\r\n            if (!this.exists(this.value)) {\r\n                this.value = this.factory();\r\n            }\r\n            return this.value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Lazy.defaultExists = function (value) {\r\n        return typeof value !== \"undefined\";\r\n    };\r\n    return Lazy;\r\n}());\r\nexports.Lazy = Lazy;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./config\"), exports);\r\n__exportStar(require(\"./rotation\"), exports);\r\n__exportStar(require(\"./rules\"), exports);\r\n__exportStar(require(\"./lazy\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.particleContainer = exports.debugContainer = exports.rootContainer = void 0;\r\nvar settings_1 = require(\"./settings\");\r\nvar util_1 = require(\"./util\");\r\n/**\r\n * The prefix to apply to the containers.\r\n */\r\nvar containerPrefix = \"party-js-\";\r\n/**\r\n * Checks if the specified container is 'active', meaning not undefined and attached to the DOM.\r\n */\r\nfunction isContainerActive(container) {\r\n    return container && container.isConnected;\r\n}\r\n/**\r\n * A generic factory method for creating a DOM container. Prefixes the specified name with the\r\n * container prefix, applies the styles and adds it under the parent.\r\n */\r\nfunction makeContainer(name, styles, parent) {\r\n    var container = document.createElement(\"div\");\r\n    container.id = containerPrefix + name;\r\n    Object.assign(container.style, styles);\r\n    return parent.appendChild(container);\r\n}\r\n/**\r\n * Represents the root container for DOM elements of the library.\r\n */\r\nexports.rootContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"container\", {\r\n        position: \"fixed\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        pointerEvents: \"none\",\r\n        userSelect: \"none\",\r\n        zIndex: settings_1.settings.zIndex.toString(),\r\n    }, document.body);\r\n}, isContainerActive);\r\n/**\r\n * Represents the debugging container of the library, only active if debugging is enabled.\r\n */\r\nexports.debugContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"debug\", {\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        margin: \"0.5em\",\r\n        padding: \"0.5em 1em\",\r\n        border: \"2px solid rgb(0, 0, 0, 0.2)\",\r\n        background: \"rgb(0, 0, 0, 0.1)\",\r\n        color: \"#555\",\r\n        fontFamily: \"monospace\",\r\n    }, exports.rootContainer.current);\r\n}, isContainerActive);\r\n/**\r\n * Represents the particle container of the library.\r\n * This is where the particle DOM elements get rendered into.\r\n */\r\nexports.particleContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"particles\", {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        perspective: \"1200px\",\r\n    }, exports.rootContainer.current);\r\n}, isContainerActive);\r\n","\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Debug = void 0;\r\nvar containers_1 = require(\"./containers\");\r\nvar settings_1 = require(\"./settings\");\r\n/**\r\n * Represents a utility module to view debug information inside the DOM.\r\n * This is disabled by default and needs to manually be enabled by setting\r\n * the '.enabled' field to true.\r\n *\r\n * While disabled, the utility will not fetch stats and update itself.\r\n */\r\nvar Debug = /** @class */ (function () {\r\n    /**\r\n     * Registers a new debug utility that is attached to the given scene.\r\n     *\r\n     * @param scene The scene to attach to.\r\n     */\r\n    function Debug(scene) {\r\n        this.scene = scene;\r\n        /**\r\n         * The rate at which the debug interface should refresh itself (per second).\r\n         */\r\n        this.refreshRate = 8;\r\n        /**\r\n         * The timer counting down to refreshes.\r\n         */\r\n        this.refreshTimer = 1 / this.refreshRate;\r\n    }\r\n    /**\r\n     * Processes a tick event in the interface. This checks if enough has passed to\r\n     * trigger a refresh, and if so, fetches the debug information and updates the DOM.\r\n     *\r\n     * @param delta The time that has elapsed since the last tick.\r\n     */\r\n    Debug.prototype.tick = function (delta) {\r\n        var container = containers_1.debugContainer.current;\r\n        // If the current display style does not match the style inferred from the\r\n        // enabled-state, update it.\r\n        var displayStyle = settings_1.settings.debug ? \"block\" : \"none\";\r\n        if (container.style.display !== displayStyle) {\r\n            container.style.display = displayStyle;\r\n        }\r\n        if (!settings_1.settings.debug) {\r\n            // If the interface is not enabled, don't fetch or update any infos.\r\n            return;\r\n        }\r\n        this.refreshTimer += delta;\r\n        if (this.refreshTimer > 1 / this.refreshRate) {\r\n            this.refreshTimer = 0;\r\n            // Update the container with the fetched information joined on line breaks.\r\n            container.innerHTML = this.getDebugInformation(delta).join(\"<br>\");\r\n        }\r\n    };\r\n    /**\r\n     * Fetches the debug information from the specified delta and the linked scene.\r\n     *\r\n     * @returns An array of debugging information, formatted as HTML.\r\n     */\r\n    Debug.prototype.getDebugInformation = function (delta) {\r\n        // Count emitters and particles.\r\n        var emitters = this.scene.emitters.length;\r\n        var particles = this.scene.emitters.reduce(function (acc, cur) { return acc + cur.particles.length; }, 0);\r\n        var infos = [\r\n            \"<b>party.js Debug</b>\",\r\n            \"--------------\",\r\n            \"FPS: \" + Math.round(1 / delta),\r\n            \"Emitters: \" + emitters,\r\n            \"Particles: \" + particles,\r\n        ];\r\n        // Emitter informations are formatted using their index, internal timer\r\n        // and total particle count.\r\n        var emitterInfos = this.scene.emitters.map(function (emitter) {\r\n            return [\r\n                // Show the current loop and the total loops.\r\n                \"\\u2B6F: \" + (emitter[\"currentLoop\"] + 1) + \"/\" + (emitter.options.loops >= 0 ? emitter.options.loops : \"∞\"),\r\n                // Show the amount of particle contained.\r\n                \"\\u03A3p: \" + emitter.particles.length,\r\n                // Show the internal timer.\r\n                !emitter.isExpired\r\n                    ? \"\\u03A3t: \" + emitter[\"durationTimer\"].toFixed(3) + \"s\"\r\n                    : \"<i>expired</i>\",\r\n            ].join(\", \");\r\n        });\r\n        infos.push.apply(infos, __spreadArray([\"--------------\"], emitterInfos));\r\n        return infos;\r\n    };\r\n    return Debug;\r\n}());\r\nexports.Debug = Debug;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.randomInsideCircle = exports.randomInsideRect = exports.randomUnitVector = exports.pick = exports.randomRange = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar math_1 = require(\"./math\");\r\n/**\r\n * Returns a random value from min to max.\r\n */\r\nfunction randomRange(min, max) {\r\n    if (min === void 0) { min = 0; }\r\n    if (max === void 0) { max = 1; }\r\n    return math_1.lerp(min, max, Math.random());\r\n}\r\nexports.randomRange = randomRange;\r\n/**\r\n * Picks a random element from the specified array. Returns undefined if the array is empty.\r\n */\r\nfunction pick(arr) {\r\n    return arr.length === 0\r\n        ? undefined\r\n        : arr[Math.floor(Math.random() * arr.length)];\r\n}\r\nexports.pick = pick;\r\n/**\r\n * Returns a random unit vector.\r\n */\r\nfunction randomUnitVector() {\r\n    var theta = randomRange(0, 2 * Math.PI);\r\n    var z = randomRange(-1, 1);\r\n    return new components_1.Vector(Math.sqrt(1 - z * z) * Math.cos(theta), Math.sqrt(1 - z * z) * Math.sin(theta), z);\r\n}\r\nexports.randomUnitVector = randomUnitVector;\r\n/**\r\n * Returns a random point inside the given rect.\r\n */\r\nfunction randomInsideRect(rect) {\r\n    return new components_1.Vector(rect.x + randomRange(0, rect.width), rect.y + randomRange(0, rect.height));\r\n}\r\nexports.randomInsideRect = randomInsideRect;\r\nfunction randomInsideCircle(circle) {\r\n    var theta = randomRange(0, 2 * Math.PI);\r\n    var radius = randomRange(0, circle.radius);\r\n    return new components_1.Vector(circle.x + Math.cos(theta) * radius, circle.y + Math.sin(theta) * radius);\r\n}\r\nexports.randomInsideCircle = randomInsideCircle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.gradientSample = exports.splineSample = exports.skewRelative = exports.skew = exports.range = exports.evaluateVariation = void 0;\r\nvar random_1 = require(\"./random\");\r\n/**\r\n * Returns a value instance of a variation.\r\n */\r\nfunction evaluateVariation(variation) {\r\n    if (Array.isArray(variation))\r\n        return random_1.pick(variation);\r\n    if (typeof variation === \"function\")\r\n        return variation();\r\n    return variation;\r\n}\r\nexports.evaluateVariation = evaluateVariation;\r\n/**\r\n * Creates a variation function that returns a random number from min to max.\r\n */\r\nfunction range(min, max) {\r\n    return function () { return random_1.randomRange(min, max); };\r\n}\r\nexports.range = range;\r\n/**\r\n * Creates a variation function that skews the specified value by a specified, absolute\r\n * amount. This means that instead of the value itself, a random number that deviates\r\n * at most by the specified amount is returned.\r\n *\r\n * @remarks\r\n * If you want to skew by a percentage instead, use `skewRelative`.\r\n */\r\nfunction skew(value, amount) {\r\n    return function () { return value + random_1.randomRange(-amount, amount); };\r\n}\r\nexports.skew = skew;\r\n/**\r\n * Creates a variation function that skews the specified value by a specified percentage.\r\n * This means that instead of the value itself, a random number that deviates by a maximum\r\n * of the specified percentage is returned.\r\n */\r\nfunction skewRelative(value, percentage) {\r\n    return function () { return value * (1 + random_1.randomRange(-percentage, percentage)); };\r\n}\r\nexports.skewRelative = skewRelative;\r\n/**\r\n * Creates a variation function that returns a random sample from the given spline.\r\n *\r\n * @param spline The spline to sample from.\r\n */\r\nfunction splineSample(spline) {\r\n    return function () { return spline.evaluate(Math.random()); };\r\n}\r\nexports.splineSample = splineSample;\r\n/**\r\n * Creates a variation function that returns a random sample from the given gradient.\r\n *\r\n * @remarks\r\n * This function is an alias for the spline variation, since a gradient is just\r\n * a spline under the hood.\r\n *\r\n * @param gradient The gradient to sample from.\r\n */\r\nfunction gradientSample(gradient) {\r\n    return splineSample(gradient);\r\n}\r\nexports.gradientSample = gradientSample;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultEmitterOptions = void 0;\r\nvar rules_1 = require(\"../../util/rules\");\r\n/**\r\n * Returns the default set of emitter options.\r\n */\r\nfunction getDefaultEmitterOptions() {\r\n    return {\r\n        duration: 5,\r\n        loops: 1,\r\n        useGravity: true,\r\n        maxParticles: 300,\r\n        despawningRules: [rules_1.despawningRules.lifetime, rules_1.despawningRules.bounds],\r\n        modules: [],\r\n    };\r\n}\r\nexports.getDefaultEmitterOptions = getDefaultEmitterOptions;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.circleSource = exports.rectSource = exports.mouseSource = exports.elementSource = exports.dynamicSource = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar random_1 = require(\"./random\");\r\n/**\r\n * Dynamically infers a source sampler for the specified source type.\r\n */\r\nfunction dynamicSource(source) {\r\n    if (source instanceof HTMLElement) {\r\n        return elementSource(source);\r\n    }\r\n    if (source instanceof components_1.Circle) {\r\n        return circleSource(source);\r\n    }\r\n    if (source instanceof components_1.Rect) {\r\n        return rectSource(source);\r\n    }\r\n    if (source instanceof MouseEvent) {\r\n        return mouseSource(source);\r\n    }\r\n    throw new Error(\"Cannot infer the source type of '\" + source + \"'.\");\r\n}\r\nexports.dynamicSource = dynamicSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified HTMLElement.\r\n */\r\nfunction elementSource(source) {\r\n    return function () { return random_1.randomInsideRect(components_1.Rect.fromElement(source)); };\r\n}\r\nexports.elementSource = elementSource;\r\n/**\r\n * Creates a sampler to retrieve the position of a mouse event.\r\n */\r\nfunction mouseSource(source) {\r\n    return function () {\r\n        return new components_1.Vector(window.scrollX + source.clientX, window.scrollY + source.clientY);\r\n    };\r\n}\r\nexports.mouseSource = mouseSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified rectangle.\r\n */\r\nfunction rectSource(source) {\r\n    return function () { return random_1.randomInsideRect(source); };\r\n}\r\nexports.rectSource = rectSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified circle.\r\n */\r\nfunction circleSource(source) {\r\n    return function () { return random_1.randomInsideCircle(source); };\r\n}\r\nexports.circleSource = circleSource;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultEmissionOptions = void 0;\r\nvar components_1 = require(\"../../components\");\r\nvar sources_1 = require(\"../../systems/sources\");\r\n/**\r\n * Returns the default set of emission options.\r\n */\r\nfunction getDefaultEmissionOptions() {\r\n    return {\r\n        rate: 10,\r\n        angle: 0,\r\n        bursts: [],\r\n        sourceSampler: sources_1.rectSource(components_1.Rect.zero),\r\n        initialLifetime: 5,\r\n        initialSpeed: 5,\r\n        initialSize: 1,\r\n        initialRotation: components_1.Vector.zero,\r\n        initialColor: components_1.Color.white,\r\n    };\r\n}\r\nexports.getDefaultEmissionOptions = getDefaultEmissionOptions;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultRendererOptions = void 0;\r\n/**\r\n * Returns the default set of renderer options.\r\n */\r\nfunction getDefaultRendererOptions() {\r\n    return {\r\n        shapeFactory: \"square\",\r\n        applyColor: defaultApplyColor,\r\n        applyOpacity: defaultApplyOpacity,\r\n        applyLighting: defaultApplyLighting,\r\n        applyTransform: defaultApplyTransform,\r\n    };\r\n}\r\nexports.getDefaultRendererOptions = getDefaultRendererOptions;\r\n/**\r\n * Applies the specified color to the element.\r\n *\r\n * @remarks\r\n * This function is aware of the element's node type:\r\n * - `div` elements have their `background` set.\r\n * - `svg` elements have their `fill` and `color` set.\r\n * - Other elements have their `color` set.\r\n */\r\nfunction defaultApplyColor(color, element) {\r\n    var hex = color.toHex();\r\n    // Note that by default, HTML node names are uppercase.\r\n    switch (element.nodeName.toLowerCase()) {\r\n        case \"div\":\r\n            element.style.background = hex;\r\n            break;\r\n        case \"svg\":\r\n            element.style.fill = element.style.color = hex;\r\n            break;\r\n        default:\r\n            element.style.color = hex;\r\n            break;\r\n    }\r\n}\r\n/**\r\n * Applies the specified opacity to the element.\r\n */\r\nfunction defaultApplyOpacity(opacity, element) {\r\n    element.style.opacity = opacity.toString();\r\n}\r\n/**\r\n * Applies the specified lighting to the element as a brightness filter.\r\n *\r\n * @remarks\r\n * This function assumes an ambient light with intensity 0.5, and that the\r\n * particle should be lit from both sides. The brightness filter can exceed 1,\r\n * to give the particles a \"glossy\" feel.\r\n */\r\nfunction defaultApplyLighting(lighting, element) {\r\n    element.style.filter = \"brightness(\" + (0.5 + Math.abs(lighting)) + \")\";\r\n}\r\n/**\r\n * Applies the specified transform to the element as a 3D CSS transform.\r\n * Also takes into account the current window scroll, to make sure that particles are\r\n * rendered inside of the fixed container.\r\n */\r\nfunction defaultApplyTransform(particle, element) {\r\n    element.style.transform =\r\n        // Make sure to take window scrolling into account.\r\n        \"translateX(\" + (particle.location.x - window.scrollX).toFixed(3) + \"px) \" +\r\n            (\"translateY(\" + (particle.location.y - window.scrollY).toFixed(3) + \"px) \") +\r\n            (\"translateZ(\" + particle.location.z.toFixed(3) + \"px) \") +\r\n            (\"rotateX(\" + particle.rotation.x.toFixed(3) + \"deg) \") +\r\n            (\"rotateY(\" + particle.rotation.y.toFixed(3) + \"deg) \") +\r\n            (\"rotateZ(\" + particle.rotation.z.toFixed(3) + \"deg) \") +\r\n            (\"scale(\" + particle.size.toFixed(3) + \")\");\r\n}\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./emitterOptions\"), exports);\r\n__exportStar(require(\"./emissionOptions\"), exports);\r\n__exportStar(require(\"./renderOptions\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Particle = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar config_1 = require(\"../util/config\");\r\n/**\r\n * Represents an emitted particle.\r\n */\r\nvar Particle = /** @class */ (function () {\r\n    /**\r\n     * Creates a new particle instance through the specified options.\r\n     */\r\n    function Particle(options) {\r\n        var populatedOptions = config_1.overrideDefaults({\r\n            lifetime: 0,\r\n            size: 1,\r\n            location: components_1.Vector.zero,\r\n            rotation: components_1.Vector.zero,\r\n            velocity: components_1.Vector.zero,\r\n            color: components_1.Color.white,\r\n            opacity: 1,\r\n        }, options);\r\n        // Generate a symbolic ID.\r\n        this.id = Symbol();\r\n        // Assign various properties, together with some initials for later reference.\r\n        this.size = this.initialSize = populatedOptions.size;\r\n        this.lifetime = this.initialLifetime = populatedOptions.lifetime;\r\n        this.rotation = this.initialRotation = populatedOptions.rotation;\r\n        this.location = populatedOptions.location;\r\n        this.velocity = populatedOptions.velocity;\r\n        this.color = populatedOptions.color;\r\n        this.opacity = populatedOptions.opacity;\r\n    }\r\n    return Particle;\r\n}());\r\nexports.Particle = Particle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Emitter = void 0;\r\nvar vector_1 = require(\"../components/vector\");\r\nvar settings_1 = require(\"../settings\");\r\nvar variation_1 = require(\"../systems/variation\");\r\nvar config_1 = require(\"../util/config\");\r\nvar options_1 = require(\"./options\");\r\nvar particle_1 = require(\"./particle\");\r\n/**\r\n * Represents an emitter that is responsible for spawning and updating particles.\r\n *\r\n * Particles themselves are just data-holders, with the system acting upon them and\r\n * modifying them. The modifications are done mainly via modules, that use the\r\n * particle's data together with some function to apply temporal transitions.\r\n *\r\n * @see Particle\r\n * @see ParticleModifierModule\r\n */\r\nvar Emitter = /** @class */ (function () {\r\n    /**\r\n     * Creates a new emitter, using default options.\r\n     */\r\n    function Emitter(options) {\r\n        /**\r\n         * The particles currently contained within the system.\r\n         */\r\n        this.particles = [];\r\n        this.currentLoop = 0; // The current loop index.\r\n        this.durationTimer = 0; // Measures the current runtime duration, to allow loops to reset.\r\n        this.emissionTimer = 0; // Measures the current emission timer, to allow spawning particles in intervals.\r\n        this.attemptedBurstIndices = []; // The indices of the particle bursts that were attempted this loop.\r\n        this.options = config_1.overrideDefaults(options_1.getDefaultEmitterOptions(), options === null || options === void 0 ? void 0 : options.emitterOptions);\r\n        this.emission = config_1.overrideDefaults(options_1.getDefaultEmissionOptions(), options === null || options === void 0 ? void 0 : options.emissionOptions);\r\n        this.renderer = config_1.overrideDefaults(options_1.getDefaultRendererOptions(), options === null || options === void 0 ? void 0 : options.rendererOptions);\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"isExpired\", {\r\n        /**\r\n         * Checks if the emitter is already expired and can be removed.\r\n         * Expired emitters do not emit new particles.\r\n         */\r\n        get: function () {\r\n            return (this.options.loops >= 0 && this.currentLoop >= this.options.loops);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Emitter.prototype, \"canRemove\", {\r\n        /**\r\n         * Checks if the emitter can safely be removed.\r\n         * This is true if no more particles are active.\r\n         */\r\n        get: function () {\r\n            return this.particles.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clears all particles inside the emitter.\r\n     *\r\n     * @returns The number of cleared particles.\r\n     */\r\n    Emitter.prototype.clearParticles = function () {\r\n        return this.particles.splice(0).length;\r\n    };\r\n    /**\r\n     * Processes a tick of the emitter, using the elapsed time.\r\n     *\r\n     * @remarks\r\n     * This handles a few things, namely:\r\n     * - Incrementing the duration timer and potentially incrementing the loop.\r\n     * - Handling particle bursts & emissions.\r\n     * - Despawning particles conditionally.\r\n     *\r\n     * @param delta The time, in seconds, passed since the last tick.\r\n     */\r\n    Emitter.prototype.tick = function (delta) {\r\n        if (!this.isExpired) {\r\n            this.durationTimer += delta;\r\n            if (this.durationTimer >= this.options.duration) {\r\n                this.currentLoop++;\r\n                // To start a new loop, the duration timer and attempted bursts are reset.\r\n                this.durationTimer = 0;\r\n                this.attemptedBurstIndices = [];\r\n            }\r\n            // We need to check the expiry again, in case the added loop or duration changed something.\r\n            if (!this.isExpired) {\r\n                // Iterate over the bursts, attempting to execute them if the time is ready.\r\n                var burstIndex = 0;\r\n                for (var _i = 0, _a = this.emission.bursts; _i < _a.length; _i++) {\r\n                    var burst = _a[_i];\r\n                    if (burst.time <= this.durationTimer) {\r\n                        // Has the burst already been attempted? If not ...\r\n                        if (!this.attemptedBurstIndices.includes(burstIndex)) {\r\n                            // Perform the burst, emitting a variable amount of particles.\r\n                            var count = variation_1.evaluateVariation(burst.count);\r\n                            for (var i = 0; i < count; i++) {\r\n                                this.emitParticle();\r\n                            }\r\n                            // Mark the burst as attempted.\r\n                            this.attemptedBurstIndices.push(burstIndex);\r\n                        }\r\n                    }\r\n                    burstIndex++;\r\n                }\r\n                // Handle the 'emission over time'. By using a while-loop instead of a simple\r\n                // if-condition, we take high deltas into account, and ensure that the correct\r\n                // number of particles will consistently be emitted.\r\n                this.emissionTimer += delta;\r\n                var delay = 1 / this.emission.rate;\r\n                while (this.emissionTimer > delay) {\r\n                    this.emissionTimer -= delay;\r\n                    this.emitParticle();\r\n                }\r\n            }\r\n        }\r\n        var _loop_1 = function (i) {\r\n            var particle = this_1.particles[i];\r\n            this_1.tickParticle(particle, delta);\r\n            // Particles should be despawned (i.e. removed from the collection) if any of\r\n            // the despawning rules apply to them.\r\n            if (this_1.options.despawningRules.some(function (rule) { return rule(particle); })) {\r\n                this_1.particles.splice(i, 1);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = this.particles.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Performs an internal tick for the particle.\r\n     *\r\n     * @remarks\r\n     * This method controls the particle's lifetime, location and velocity, according\r\n     * to the elapsed delta and the configuration. Additionally, each of the emitter's\r\n     * modules is applied to the particle.\r\n     *\r\n     * @param particle The particle to apply the tick for.\r\n     * @param delta The time, in seconds, passed since the last tick.\r\n     */\r\n    Emitter.prototype.tickParticle = function (particle, delta) {\r\n        particle.lifetime -= delta;\r\n        if (this.options.useGravity) {\r\n            // Apply gravitational acceleration to the particle.\r\n            particle.velocity = particle.velocity.add(vector_1.Vector.up.scale(settings_1.settings.gravity * delta));\r\n        }\r\n        // Apply the particle's velocity to its location.\r\n        particle.location = particle.location.add(particle.velocity.scale(delta));\r\n        // Apply the modules to the particle.\r\n        for (var _i = 0, _a = this.options.modules; _i < _a.length; _i++) {\r\n            var moduleFunction = _a[_i];\r\n            moduleFunction(particle);\r\n        }\r\n    };\r\n    /**\r\n     * Emits a particle using the registered settings.\r\n     * Also may despawn a particle if the maximum number of particles is exceeded.\r\n     */\r\n    Emitter.prototype.emitParticle = function () {\r\n        var particle = new particle_1.Particle({\r\n            location: this.emission.sourceSampler(),\r\n            lifetime: variation_1.evaluateVariation(this.emission.initialLifetime),\r\n            velocity: vector_1.Vector.from2dAngle(variation_1.evaluateVariation(this.emission.angle)).scale(variation_1.evaluateVariation(this.emission.initialSpeed)),\r\n            size: variation_1.evaluateVariation(this.emission.initialSize),\r\n            rotation: variation_1.evaluateVariation(this.emission.initialRotation),\r\n            color: variation_1.evaluateVariation(this.emission.initialColor),\r\n        });\r\n        this.particles.push(particle);\r\n        // Ensure that no more particles than 'maxParticles' can exist.\r\n        if (this.particles.length > this.options.maxParticles) {\r\n            this.particles.shift();\r\n        }\r\n        return particle;\r\n    };\r\n    return Emitter;\r\n}());\r\nexports.Emitter = Emitter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolveShapeFactory = exports.resolvableShapes = void 0;\r\nvar variation_1 = require(\"./variation\");\r\n/**\r\n * Represents the lookup that maps resolveable element keys to their HTML strings.\r\n *\r\n * @remarks\r\n * The default shapes are made to fit inside a dimension of 10x10 pixels, except\r\n * the 'star' shape, which exceeds it slightly.\r\n */\r\nexports.resolvableShapes = {\r\n    square: \"<div style=\\\"height: 10px; width: 10px;\\\"></div>\",\r\n    rectangle: \"<div style=\\\"height: 6px; width: 10px;\\\"></div>\",\r\n    circle: \"<svg viewBox=\\\"0 0 2 2\\\" width=\\\"10\\\" height=\\\"10\\\"><circle cx=\\\"1\\\" cy=\\\"1\\\" r=\\\"1\\\" fill=\\\"currentColor\\\"/></svg>\",\r\n    roundedSquare: \"<div style=\\\"height: 10px; width: 10px; border-radius: 3px;\\\"></div>\",\r\n    roundedRectangle: \"<div style=\\\"height: 6px; width: 10px; border-radius: 3px;\\\"></div>\",\r\n    star: \"<svg viewBox=\\\"0 0 512 512\\\" width=\\\"15\\\" height=\\\"15\\\"><polygon fill=\\\"currentColor\\\" points=\\\"512,197.816 325.961,185.585 255.898,9.569 185.835,185.585 0,197.816 142.534,318.842 95.762,502.431 255.898,401.21 416.035,502.431 369.263,318.842\\\"/></svg>\",\r\n};\r\n/**\r\n * Resolves the specified element factory using the resolvable elements, if needed.\r\n */\r\nfunction resolveShapeFactory(factory) {\r\n    // Retrieve the unresolved element from the factory.\r\n    var shape = variation_1.evaluateVariation(factory);\r\n    // If a string is returned, we need to resolve the element. This means\r\n    // looking up the string in the resolver lookup. If the key was not\r\n    // resolvable, we throw an error.\r\n    if (typeof shape === \"string\") {\r\n        var resolved = exports.resolvableShapes[shape];\r\n        if (!resolved) {\r\n            throw new Error(\"Failed to resolve shape key '\" + shape + \"'. Did you forget to add it to the 'resolvableShapes' lookup?\");\r\n        }\r\n        // We're in luck, we can resolve the element! We create a dummy <div> element\r\n        // to set the innerHTML of, and return the first element child.\r\n        var dummy = document.createElement(\"div\");\r\n        dummy.innerHTML = resolved;\r\n        return dummy.firstElementChild;\r\n    }\r\n    return shape;\r\n}\r\nexports.resolveShapeFactory = resolveShapeFactory;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Renderer = void 0;\r\nvar __1 = require(\"..\");\r\nvar vector_1 = require(\"../components/vector\");\r\nvar containers_1 = require(\"../containers\");\r\nvar shapes_1 = require(\"../systems/shapes\");\r\nvar util_1 = require(\"../util\");\r\n/**\r\n * Represents a renderer used to draw particles to the DOM via HTML\r\n * elements. Additionally, it is responsible for purging the elements\r\n * of destroyed particles from the DOM.\r\n */\r\nvar Renderer = /** @class */ (function () {\r\n    function Renderer() {\r\n        /**\r\n         * The lookup of elements currently handled by the renderer, with the\r\n         * particle ID as key and a HTMLElement as the value.\r\n         */\r\n        this.elements = new Map();\r\n        /**\r\n         * The normalized direction the light comes from.\r\n         */\r\n        this.light = new vector_1.Vector(0, 0, 1);\r\n        /**\r\n         * Whether or not the renderer should actually draw particles.\r\n         */\r\n        this.enabled = true;\r\n        // Respect that users might prefer reduced motion.\r\n        // See: https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\r\n        this.enabled =\r\n            !__1.settings.respectReducedMotion ||\r\n                !window.matchMedia(\"(prefers-reduced-motion)\").matches;\r\n    }\r\n    /**\r\n     * Begins a new render block. During the rendering phase, a list of rendered particles\r\n     * is tracked, so that stale particles can be removed later.\r\n     */\r\n    Renderer.prototype.begin = function () {\r\n        this.renderedParticles = [];\r\n    };\r\n    /**\r\n     * Terminates an existing render block. This checks which particles were rendered\r\n     * during the block and purges all unused HTMLElements from the DOM.\r\n     *\r\n     * @returns The amount of particles that were rendered.\r\n     */\r\n    Renderer.prototype.end = function () {\r\n        var it = this.elements.keys();\r\n        var result = it.next();\r\n        while (!result.done) {\r\n            var id = result.value;\r\n            if (!this.renderedParticles.includes(id)) {\r\n                this.elements.get(id).remove();\r\n                this.elements.delete(id);\r\n            }\r\n            result = it.next();\r\n        }\r\n        return this.renderedParticles.length;\r\n    };\r\n    /**\r\n     * Renders an individual particle to the DOM. If the particle is rendered for the first\r\n     * time, a HTMLElement will be created using the emitter's render settings.\r\n     *\r\n     * @param particle The particle to be rendered.\r\n     * @param emitter The system containing the particle.\r\n     */\r\n    Renderer.prototype.renderParticle = function (particle, emitter) {\r\n        if (!this.enabled)\r\n            return;\r\n        var options = emitter.renderer;\r\n        // Ensure that an element for the particle exists.\r\n        var element = this.elements.has(particle.id)\r\n            ? this.elements.get(particle.id)\r\n            : this.createParticleElement(particle, options);\r\n        if (options.applyColor) {\r\n            // If the options offer a coloring method, apply it.\r\n            options.applyColor(particle.color, element);\r\n        }\r\n        if (options.applyOpacity) {\r\n            // If the options offer an opacity modifying method, apply it.\r\n            options.applyOpacity(particle.opacity, element);\r\n        }\r\n        if (options.applyLighting) {\r\n            // If the options offer a lighting method, apply it.\r\n            // Lighting is calculated as a combination of the particle's normal\r\n            // direction and the lighting direction.\r\n            var normal = util_1.rotationToNormal(particle.rotation);\r\n            var lightingCoefficient = normal.dot(this.light);\r\n            options.applyLighting(lightingCoefficient, element);\r\n        }\r\n        if (options.applyTransform) {\r\n            // If the options offer a transformation method, apply it.\r\n            // This ensures the particle is rendered at the correct position with the correct rotation.\r\n            options.applyTransform(particle, element);\r\n        }\r\n        // Mark the particle as rendered.\r\n        this.renderedParticles.push(particle.id);\r\n    };\r\n    /**\r\n     * Creates the HTMLElement for a particle that does not have one already.\r\n     */\r\n    Renderer.prototype.createParticleElement = function (particle, options) {\r\n        // Resolve the element returned from the factory.\r\n        var resolved = shapes_1.resolveShapeFactory(options.shapeFactory);\r\n        // Clone the node to ensure we do not break existing elements.\r\n        var element = resolved.cloneNode(true);\r\n        // Ensure that the elements can be \"stacked\" ontop of eachother.\r\n        element.style.position = \"absolute\";\r\n        // Register the new element in the map, while appending the new element to the DOM.\r\n        this.elements.set(particle.id, containers_1.particleContainer.current.appendChild(element));\r\n        return element;\r\n    };\r\n    return Renderer;\r\n}());\r\nexports.Renderer = Renderer;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Scene = void 0;\r\nvar debug_1 = require(\"./debug\");\r\nvar emitter_1 = require(\"./particles/emitter\");\r\nvar renderer_1 = require(\"./particles/renderer\");\r\n/**\r\n * Represents a scene that contains emitters and their particles.\r\n *\r\n * Scenes are responsible for spawning and updating emitters, and\r\n * removing them once they are done.\r\n *\r\n * Scenes are not explicitely present in the DOM as an element, only\r\n * the contained particles are.\r\n */\r\nvar Scene = /** @class */ (function () {\r\n    /**\r\n     * Initializes a new scene and starts the ticking job.\r\n     */\r\n    function Scene() {\r\n        /**\r\n         * The emitters currently present in the scene.\r\n         */\r\n        this.emitters = [];\r\n        /**\r\n         * The debug instance associated with the scene.\r\n         */\r\n        this.debug = new debug_1.Debug(this);\r\n        /**\r\n         * The renderer associated with the scene.\r\n         */\r\n        this.renderer = new renderer_1.Renderer();\r\n        /**\r\n         * The ID of the currently scheduled tick.\r\n         */\r\n        this.scheduledTickId = undefined;\r\n        /**\r\n         * The timestamp of the last tick, used to calculate deltas.\r\n         *\r\n         * @initialValue `performance.now()` (time origin)\r\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\r\n         */\r\n        this.lastTickTimestamp = performance.now();\r\n        // Ensure the scene context is preserved on the tick.\r\n        this.tick = this.tick.bind(this);\r\n        this.scheduleTick();\r\n    }\r\n    /**\r\n     * Creates and returns a new, default emitter object.\r\n     */\r\n    Scene.prototype.createEmitter = function (options) {\r\n        var emitter = new emitter_1.Emitter(options);\r\n        this.emitters.push(emitter);\r\n        return emitter;\r\n    };\r\n    /**\r\n     * Clears all emitters from the scene.\r\n     *\r\n     * @returns The number of cleared emitters.\r\n     */\r\n    Scene.prototype.clearEmitters = function () {\r\n        return this.emitters.splice(0).length;\r\n    };\r\n    /**\r\n     * Clears the particles from all emitters in the scene.\r\n     * Note that this does not remove the actual emitter objects though.\r\n     *\r\n     * @returns The number of cleared particles.\r\n     */\r\n    Scene.prototype.clearParticles = function () {\r\n        return this.emitters.reduce(function (sum, emitter) { return sum + emitter.clearParticles(); }, 0);\r\n    };\r\n    /**\r\n     * Schedules a tick in the scene.\r\n     */\r\n    Scene.prototype.scheduleTick = function () {\r\n        this.scheduledTickId = window.requestAnimationFrame(this.tick);\r\n    };\r\n    /**\r\n     * Cancels a pending tick operation.\r\n     */\r\n    Scene.prototype.cancelTick = function () {\r\n        window.cancelAnimationFrame(this.scheduledTickId);\r\n    };\r\n    /**\r\n     * Processes a tick cycle, updating all emitters contained in the scene.\r\n     * This is handled as a JS animation frame event, hence the passed timestamp.\r\n     *\r\n     * @remarks\r\n     * The emitter ticking and particle rendering is run using try-catch blocks,\r\n     * to ensure that we can recover from potential errors.\r\n     *\r\n     * @param timestamp The current timestamp of the animation frame.\r\n     */\r\n    Scene.prototype.tick = function (timestamp) {\r\n        // Calculate the elapsed delta and convert it to seconds.\r\n        var delta = (timestamp - this.lastTickTimestamp) / 1000;\r\n        try {\r\n            // Perform ticks for all the emitters in the scene.\r\n            for (var i = 0; i < this.emitters.length; i++) {\r\n                var emitter = this.emitters[i];\r\n                emitter.tick(delta);\r\n                if (emitter.isExpired && emitter.canRemove) {\r\n                    this.emitters.splice(i--, 1);\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"An error occurred while updating the scene's emitters:\\n\\\"\" + error + \"\\\"\");\r\n        }\r\n        try {\r\n            // Instruct the renderer to draw the particles of all systems.\r\n            this.renderer.begin();\r\n            for (var _i = 0, _a = this.emitters; _i < _a.length; _i++) {\r\n                var emitter = _a[_i];\r\n                for (var _b = 0, _c = emitter.particles; _b < _c.length; _b++) {\r\n                    var particle = _c[_b];\r\n                    this.renderer.renderParticle(particle, emitter);\r\n                }\r\n            }\r\n            this.renderer.end();\r\n        }\r\n        catch (error) {\r\n            console.error(\"An error occurred while rendering the scene's particles:\\n\\\"\" + error + \"\\\"\");\r\n        }\r\n        // Perform a tick on the debug interface\r\n        this.debug.tick(delta);\r\n        // Save the timestamp as the last tick timestamp and schedule a new tick.\r\n        this.lastTickTimestamp = timestamp;\r\n        this.scheduleTick();\r\n    };\r\n    return Scene;\r\n}());\r\nexports.Scene = Scene;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ModuleBuilder = void 0;\r\nvar components_1 = require(\"../components\");\r\n/**\r\n * Represents a builder for particle modules. Returns an evaluatable module\r\n * function, that can be consumed by emitters.\r\n *\r\n * @remarks\r\n * Not all properties can be driven. TypeScript will validate this at compile time,\r\n * but no internal validation is performed due to performance reasons. Also, note\r\n * that the driving factor is \"lifetime\" by default.\r\n *\r\n * @example\r\n * ```ts\r\n * new ModuleBuilder()\r\n *     .drive(\"size\")\r\n *     .by((t) => t * 2)\r\n *     .through(\"lifetime\")\r\n *     .build();\r\n * ```\r\n */\r\nvar ModuleBuilder = /** @class */ (function () {\r\n    function ModuleBuilder() {\r\n        /**\r\n         * The factor driving the built function.\r\n         *\r\n         * @defaultValue \"lifetime\"\r\n         */\r\n        this.factor = \"lifetime\";\r\n        this.isRelative = false;\r\n    }\r\n    /**\r\n     * Specifies the key in the particle that should be driven.\r\n     *\r\n     * @remarks\r\n     * Note that not all of a particle's properties are drivable through modules. If you\r\n     * need full control of a particle inside of a module, you can use a module function directly.\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.drive = function (key) {\r\n        this.driverKey = key;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies the factor to drive the evaluated value by. Supports \"lifetime\" and \"size\".\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.through = function (factor) {\r\n        this.factor = factor;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies the value to drive the module behaviour by. This can be a constant,\r\n     * a spline or an evaluable function. Note that in the last case, the driving\r\n     * factor is passed as a parameter.\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.by = function (driver) {\r\n        this.driverValue = driver;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies that the module function is supposed to act relative to the\r\n     * properties initial value.\r\n     *\r\n     * @remarks\r\n     * Note that this is only possible if an \"initial*\" property exists on the\r\n     * particle object. The operation applied to the initial and new value\r\n     * is dependant on their type:\r\n     * - `Vector`: Both vectors are added.\r\n     * - `number`: Both numbers are multiplied.\r\n     *\r\n     * For more advanced relative customizations, consider using the particle\r\n     * object in the driver value function instead, like:\r\n     * ```ts\r\n     * .by((t, p) => p.initialSize + t * 2);\r\n     * ```\r\n     */\r\n    ModuleBuilder.prototype.relative = function (isRelative) {\r\n        if (isRelative === void 0) { isRelative = true; }\r\n        this.isRelative = isRelative;\r\n        return this;\r\n    };\r\n    /**\r\n     * Consumes the builder and returns an evaluatable module function.\r\n     *\r\n     * @remarks\r\n     * Note that you need to specify the driving key and value, otherwise an error\r\n     * will be thrown.\r\n     */\r\n    ModuleBuilder.prototype.build = function () {\r\n        var _this = this;\r\n        if (typeof this.driverKey === \"undefined\") {\r\n            throw new Error(\"No driving key was provided in the module builder. Did you forget a '.drive()' call?\");\r\n        }\r\n        if (typeof this.driverValue === \"undefined\") {\r\n            throw new Error(\"No driving value was provided in the module builder. Did you forget a '.through()' call?\");\r\n        }\r\n        return function (particle) {\r\n            updateDrivenProperty(particle, _this.driverKey, evaluateModuleDriver(_this.driverValue, calculateModuleFactor(_this.factor, particle), particle), _this.isRelative);\r\n        };\r\n    };\r\n    return ModuleBuilder;\r\n}());\r\nexports.ModuleBuilder = ModuleBuilder;\r\n/**\r\n * Evaluates the module driver using a specified factor.\r\n */\r\nfunction evaluateModuleDriver(driver, factor, particle) {\r\n    if (typeof driver === \"object\" && \"evaluate\" in driver) {\r\n        return driver.evaluate(factor);\r\n    }\r\n    if (typeof driver === \"function\") {\r\n        return driver(factor, particle);\r\n    }\r\n    return driver;\r\n}\r\n/**\r\n * Calculates a module factor using a specified particle as context.\r\n */\r\nfunction calculateModuleFactor(factor, particle) {\r\n    switch (factor) {\r\n        case \"lifetime\":\r\n            return particle.initialLifetime - particle.lifetime;\r\n        case \"relativeLifetime\":\r\n            return ((particle.initialLifetime - particle.lifetime) /\r\n                particle.initialLifetime);\r\n        case \"size\":\r\n            return particle.size;\r\n        default:\r\n            throw new Error(\"Invalid driving factor '\" + factor + \"'.\");\r\n    }\r\n}\r\n/**\r\n * Updates a driven property of a particle using the specified value.\r\n *\r\n * @remarks\r\n * If the operation is marked as relative, the function infers the new value\r\n * through the value's type. Note that relative properties must have a\r\n * corresponding \"initial*\" value in the particle's properties.\r\n */\r\nfunction updateDrivenProperty(particle, key, value, relative) {\r\n    if (relative === void 0) { relative = false; }\r\n    if (!relative) {\r\n        particle[key] = value;\r\n    }\r\n    else {\r\n        var initial = particle[\"initial\" + key[0].toUpperCase() + key.substr(1)];\r\n        if (typeof initial === \"undefined\") {\r\n            throw new Error(\"Unable to use relative chaining with key '\" + key + \"'; no initial value exists.\");\r\n        }\r\n        if (value instanceof components_1.Vector) {\r\n            updateDrivenProperty(particle, key, initial.add(value));\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            updateDrivenProperty(particle, key, initial * value);\r\n        }\r\n        else {\r\n            throw new Error(\"Unable to use relative chaining with particle key '\" + key + \"'; no relative operation for '\" + value + \"' could be inferred.\");\r\n        }\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.confetti = void 0;\r\nvar __1 = require(\"../\");\r\nvar components_1 = require(\"../components\");\r\nvar modules_1 = require(\"../systems/modules\");\r\nvar random = require(\"../systems/random\");\r\nvar sources = require(\"../systems/sources\");\r\nvar variation = require(\"../systems/variation\");\r\nvar util = require(\"../util\");\r\n/**\r\n * The standard confetti template.\r\n *\r\n * @param source The source to emit the confetti from.\r\n * @param options The (optional) configuration overrides.\r\n */\r\nfunction confetti(source, options) {\r\n    var populated = util.overrideDefaults({\r\n        count: variation.range(20, 40),\r\n        spread: variation.range(35, 45),\r\n        speed: variation.range(300, 600),\r\n        size: variation.skew(1, 0.2),\r\n        rotation: function () { return random.randomUnitVector().scale(180); },\r\n        color: function () { return components_1.Color.fromHsl(random.randomRange(0, 360), 100, 70); },\r\n        modules: [\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"size\")\r\n                .by(function (t) { return Math.min(1, t * 3); })\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"rotation\")\r\n                .by(function (t) { return new components_1.Vector(140, 200, 260).scale(t); })\r\n                .relative()\r\n                .build(),\r\n        ],\r\n        shapes: [\"square\", \"circle\"],\r\n    }, options);\r\n    var emitter = __1.scene.current.createEmitter({\r\n        emitterOptions: {\r\n            loops: 1,\r\n            duration: 8,\r\n            modules: populated.modules,\r\n        },\r\n        emissionOptions: {\r\n            rate: 0,\r\n            bursts: [{ time: 0, count: populated.count }],\r\n            sourceSampler: sources.dynamicSource(source),\r\n            angle: variation.skew(-90, variation.evaluateVariation(populated.spread)),\r\n            initialLifetime: 8,\r\n            initialSpeed: populated.speed,\r\n            initialSize: populated.size,\r\n            initialRotation: populated.rotation,\r\n            initialColor: populated.color,\r\n        },\r\n        rendererOptions: {\r\n            shapeFactory: populated.shapes,\r\n        },\r\n    });\r\n    return emitter;\r\n}\r\nexports.confetti = confetti;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sparkles = void 0;\r\nvar __1 = require(\"..\");\r\nvar components_1 = require(\"../components\");\r\nvar modules_1 = require(\"../systems/modules\");\r\nvar random = require(\"../systems/random\");\r\nvar sources = require(\"../systems/sources\");\r\nvar variation = require(\"../systems/variation\");\r\nvar util = require(\"../util\");\r\n/**\r\n * The standard sparkles template.\r\n *\r\n * @param source The source to emit the sparkles from.\r\n * @param options The (optional) configuration overrides.\r\n */\r\nfunction sparkles(source, options) {\r\n    var populated = util.overrideDefaults({\r\n        lifetime: variation.range(1, 2),\r\n        count: variation.range(10, 20),\r\n        speed: variation.range(100, 200),\r\n        size: variation.range(0.8, 1.8),\r\n        rotation: function () { return new components_1.Vector(0, 0, random.randomRange(0, 360)); },\r\n        color: function () { return components_1.Color.fromHsl(50, 100, random.randomRange(55, 85)); },\r\n        modules: [\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"rotation\")\r\n                .by(function (t) { return new components_1.Vector(0, 0, 200).scale(t); })\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"size\")\r\n                .by(new components_1.NumericSpline({ time: 0, value: 0 }, { time: 0.3, value: 1 }, { time: 0.7, value: 1 }, { time: 1, value: 0 }))\r\n                .through(\"relativeLifetime\")\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"opacity\")\r\n                .by(new components_1.NumericSpline({ time: 0, value: 1 }, { time: 0.5, value: 1 }, { time: 1, value: 0 }))\r\n                .through(\"relativeLifetime\")\r\n                .build(),\r\n        ],\r\n        shapes: \"star\",\r\n    }, options);\r\n    var emitter = __1.scene.current.createEmitter({\r\n        emitterOptions: {\r\n            loops: 1,\r\n            duration: 3,\r\n            useGravity: false,\r\n            modules: populated.modules,\r\n        },\r\n        emissionOptions: {\r\n            rate: 0,\r\n            bursts: [{ time: 0, count: populated.count }],\r\n            sourceSampler: sources.dynamicSource(source),\r\n            angle: variation.range(0, 360),\r\n            initialLifetime: populated.lifetime,\r\n            initialSpeed: populated.speed,\r\n            initialSize: populated.size,\r\n            initialRotation: populated.rotation,\r\n            initialColor: populated.color,\r\n        },\r\n        rendererOptions: {\r\n            applyLighting: undefined,\r\n            shapeFactory: populated.shapes,\r\n        },\r\n    });\r\n    return emitter;\r\n}\r\nexports.sparkles = sparkles;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./confetti\"), exports);\r\n__exportStar(require(\"./sparkles\"), exports);\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = exports.forceInit = exports.util = exports.math = exports.random = exports.sources = exports.variation = exports.Emitter = exports.Particle = exports.settings = exports.scene = void 0;\r\nvar scene_1 = require(\"./scene\");\r\nvar util_1 = require(\"./util\");\r\n__exportStar(require(\"./components\"), exports);\r\n__exportStar(require(\"./templates\"), exports);\r\n__exportStar(require(\"./systems/shapes\"), exports);\r\n__exportStar(require(\"./systems/modules\"), exports);\r\n// Create the lazy-initializing scene.\r\nexports.scene = new util_1.Lazy(function () {\r\n    // The library requires the use of the DOM, hence it cannot run in non-browser environments.\r\n    if (typeof document === \"undefined\" || typeof window === \"undefined\") {\r\n        throw new Error(\"It seems like you are trying to run party.js in a non-browser-like environment, which is not supported.\");\r\n    }\r\n    return new scene_1.Scene();\r\n});\r\nvar settings_1 = require(\"./settings\");\r\nObject.defineProperty(exports, \"settings\", { enumerable: true, get: function () { return settings_1.settings; } });\r\nvar particle_1 = require(\"./particles/particle\");\r\nObject.defineProperty(exports, \"Particle\", { enumerable: true, get: function () { return particle_1.Particle; } });\r\nvar emitter_1 = require(\"./particles/emitter\");\r\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return emitter_1.Emitter; } });\r\nexports.variation = require(\"./systems/variation\");\r\nexports.sources = require(\"./systems/sources\");\r\nexports.random = require(\"./systems/random\");\r\nexports.math = require(\"./systems/math\");\r\nexports.util = require(\"./util\");\r\n/**\r\n * Forces the initialization of the otherwise lazy scene.\r\n */\r\nfunction forceInit() {\r\n    exports.scene.current;\r\n}\r\nexports.forceInit = forceInit;\r\nexports.default = require(\"./\");\r\n","/* eslint-disable no-shadow */\n'use strict';\n\nconst Cell = require('./Cell');\nconst party = require('party-js');\n\nclass Game2048 {\n  static _keyboardHandler(event) {\n    const activeGame = window.game2048\n      && window.game2048.games.find(game => game.active);\n\n    if (!activeGame) {\n      return;\n    }\n\n    if (activeGame._isPlaying) {\n      event.preventDefault();\n    }\n\n    switch (event.code) {\n      case 'ArrowLeft':\n      case 'Numpad4':\n        activeGame.moveLeft();\n        break;\n      case 'ArrowRight':\n      case 'Numpad6':\n        activeGame.moveRight();\n        break;\n      case 'ArrowUp':\n      case 'Numpad8':\n        activeGame.moveUp();\n        break;\n      case 'ArrowDown':\n      case 'Numpad2':\n        activeGame.moveDown();\n        break;\n      case 'Enter':\n      case 'NumpadEnter':\n        activeGame.start();\n        break;\n      case 'KeyR':\n        activeGame.restart();\n        break;\n      case 'Tab':\n        let index = window.game2048.games\n          .findIndex(game => game === activeGame);\n\n        if (index === window.game2048.games.length - 1) {\n          index = -1;\n        }\n\n        const nextGame = window.game2048.games[index + 1];\n\n        nextGame._activateGame();\n        break;\n    };\n  }\n\n  static _deactivateGames() {\n    if (!window.game2048) {\n      return;\n    }\n\n    window.game2048.games.forEach(game => (game.active = false));\n  }\n\n  constructor(container, fieldSize) {\n    this._fieldSize = !fieldSize || fieldSize < 4\n      ? 4\n      : fieldSize > 8\n        ? 8\n        : fieldSize;\n\n    this._container = container || 'body';\n    this._isPlaying = false;\n    this._isActive = false;\n    this._score = 0;\n    this._maxValue = 0;\n    this._field = [];\n\n    this._dom = {};\n\n    window.game2048 = window.game2048 || {\n      games: [],\n      keyboardHandler: null,\n    };\n    window.game2048.games.push(this);\n  }\n\n  get score() {\n    return this._score;\n  }\n\n  set score(value) {\n    this._score = value || 0;\n    this._dom.score.innerText = this._score;\n  }\n\n  get maxValue() {\n    return this._maxValue;\n  }\n\n  set maxValue(value) {\n    if (this._maxValue >= value) {\n      return;\n    }\n\n    this._maxValue = value;\n  }\n\n  get active() {\n    return this._isActive;\n  }\n\n  set active(state) {\n    if (!this._dom.game) {\n      return;\n    }\n\n    this._isActive = state;\n    this._dom.game.classList.toggle('active', state);\n  }\n\n  _initGame() {\n    this._renderGame();\n    this._initField();\n    this._initHandlers();\n    this._activateGame();\n  }\n\n  _renderGame() {\n    if (this._container instanceof Element) {\n      this._dom.container = this._container;\n    } else if (typeof this._container === 'string') {\n      this._dom.container = document\n        .querySelector(this._container);\n    } else {\n      throw new TypeError(\n        'Game container must be a DOM Element or string!'\n      );\n    }\n\n    if (!this._dom.container) {\n      throw new Error(\n        'Game container not found!'\n      );\n    }\n\n    this._dom.container.innerHTML = `\n      <div class=\"game\">\n        <div class=\"game__container\">\n          <div class=\"game__header\">\n            <h1 class=\"game__title\">2048</h1>\n\n            <div class=\"game__controls\">\n              <div class=\"game__controls-size\">\n                <span\n                  class=\"game__controls-size-smaller\"\n                  ${this._fieldSize === 4 ? 'disabled' : ''}\n                >-</span>\n\n                <div class=\"game__controls-size-block\">\n                  <span>Size:</span>\n\n                  <span class=\"game__controls-size-value\">\n                    ${this._fieldSize}\n                  </span>\n                </div>\n\n                <span\n                  class=\"game__controls-size-bigger\"\n                  ${this._fieldSize === 10 ? 'disabled' : ''}\n                >+</span>\n              </div>\n\n              <p class=\"game__controls-info\">\n                Score: <span class=\"game-score\">0</span>\n              </p>\n\n              <button\n                class=\"\n                  game__controls-button-start\n                  button start\n                \"\n                title = \"Press Enter to start the game\"\n              >Start</button>\n            </div>\n          </div>\n\n          <table class=\"game__field field\">\n            <tbody>\n              ${`\n                  <tr class=\"field__row\">\n                    ${`<td class=\"field__cell\"></td>`.repeat(this._fieldSize)}\n                  </tr>\n                `.repeat(this._fieldSize)}\n            </tbody>\n          </table>\n\n          <div class=\"game__messages\">\n            <p class=\"message message-lose hidden\">\n              You lose! Restart the game?\n            </p>\n\n            <p class=\"message message-win hidden\">\n              Winner! Congrats! You did it!\n            </p>\n\n            <p class=\"message message-start\">\n              Press \"Start\" to begin game. Good luck!\n            </p>\n\n            <p class=\"message message-hint hidden\">\n              Press ← ↑ → ↓ or swipe to move blocks.\n            </p>\n          </div>\n        </div>\n      </div>\n    `;\n\n    this._dom.game = this._dom.container.querySelector('.game');\n    this._dom.gameContainer = this._dom.game.querySelector('.game__container');\n    this._dom.field = this._dom.game.querySelector('.field');\n    this._dom.score = this._dom.game.querySelector('.game-score');\n    this._dom.size = this._dom.game.querySelector('.game__controls-size');\n\n    this._dom.controls = {\n      start: this._dom.game.querySelector('.game__controls-button-start'),\n      smaller: this._dom.game.querySelector('.game__controls-size-smaller'),\n      bigger: this._dom.game.querySelector('.game__controls-size-bigger'),\n    };\n\n    this._dom.rows = this._dom.field.querySelectorAll('.field__row');\n\n    this._dom.messages = {\n      start: this._dom.game.querySelector('.message-start'),\n      win: this._dom.game.querySelector('.message-win'),\n      lose: this._dom.game.querySelector('.message-lose'),\n      hint: this._dom.game.querySelector('.message-hint'),\n    };\n  }\n\n  _initField() {\n    this._field = [];\n\n    if (!this._dom.field) {\n      return;\n    }\n\n    [...this._dom.rows].forEach(row => {\n      const cellsRow = [];\n      const cells = row.querySelectorAll('.field__cell');\n\n      [...cells].forEach(cell => cellsRow.push(new Cell(cell)));\n\n      this._field.push(cellsRow);\n    });\n  }\n\n  _clearField() {\n    this._field.forEach(row => {\n      row.forEach(cell => (cell.value = 0));\n    });\n  }\n\n  _fillField(fieldData) {\n    let hasBeenChanged = false;\n\n    for (let i = 0; i < this._fieldSize; i++) {\n      for (let j = 0; j < this._fieldSize; j++) {\n        if (this._field[i][j].value === fieldData[i][j].value) {\n          continue;\n        }\n\n        this._field[i][j].value = fieldData[i][j].value;\n        this._field[i][j].state = fieldData[i][j].isMerged ? 'merged' : '';\n        this.maxValue = fieldData[i][j].value;\n        hasBeenChanged = true;\n      }\n    }\n\n    return hasBeenChanged;\n  }\n\n  _initHandlers() {\n    if (!window.game2048.keyboardHandler) {\n      // Global event\n      // Prevents miltiple keyboard handlers to be attached to the document\n      window.game2048.keyboardHandler = Game2048._keyboardHandler;\n\n      document.body\n        .addEventListener('keydown', window.game2048.keyboardHandler);\n    }\n\n    const startClickHandler = () => {\n      this._isPlaying\n        ? this.restart()\n        : this.start();\n    };\n\n    const sizeSmallerClickHandler = () => {\n      if (this._isPlaying || this._fieldSize === 4) {\n        return;\n      }\n\n      this._fieldSize--;\n      this._initGame();\n    };\n\n    const sizeBiggerClickHandler = () => {\n      if (this._isPlaying || this._fieldSize === 10) {\n        return;\n      }\n\n      this._fieldSize++;\n      this._initGame();\n    };\n\n    let xStart;\n    let yStart;\n\n    const touchStartHandler = event => {\n      xStart = event.touches[0].clientX;\n      yStart = event.touches[0].clientY;\n    };\n\n    const touchMoveHandler = event => {\n      if (!xStart || !yStart) {\n        return;\n      }\n\n      event.preventDefault();\n\n      const xMoved = xStart - event.touches[0].clientX;\n      const yMoved = yStart - event.touches[0].clientY;\n\n      if (Math.abs(xMoved) > Math.abs(yMoved)) {\n        if (xMoved > 0) {\n          this.moveLeft();\n        } else {\n          this.moveRight();\n        };\n      } else {\n        if (yMoved > 0) {\n          this.moveUp();\n        } else {\n          this.moveDown();\n        }\n      }\n\n      xStart = null;\n      yStart = null;\n    };\n\n    this._dom.controls.start\n      .addEventListener('click', startClickHandler);\n\n    this._dom.controls.smaller\n      .addEventListener('click', sizeSmallerClickHandler.bind(this));\n\n    this._dom.controls.bigger\n      .addEventListener('click', sizeBiggerClickHandler.bind(this));\n\n    this._dom.gameContainer\n      .addEventListener('click', this._activateGame.bind(this));\n\n    this._dom.field.addEventListener('touchstart', touchStartHandler, false);\n\n    this._dom.field.addEventListener('touchmove', touchMoveHandler, false);\n  }\n\n  _getRandomInt(min, max) {\n    return Math.floor(Math.random() * max) + min;\n  };\n\n  _insertRandomCells(count = 1) {\n    if (!this._isPlaying) {\n      return;\n    }\n\n    for (let i = 1; i <= count; i++) {\n      const freeCells = this._getFreeCells();\n      const randomIndex = this._getRandomInt(0, freeCells.length);\n      const randomValue = Math.random() < 0.1 ? 4 : 2;\n\n      freeCells[randomIndex].value = randomValue;\n      freeCells[randomIndex].state = 'new';\n      this.maxValue = randomValue;\n    }\n  }\n\n  _getFreeCells() {\n    return this._field\n      .flat()\n      .filter(cell => cell.value === 0);\n  }\n\n  _activateGame() {\n    Game2048._deactivateGames();\n    this.active = true;\n\n    this._dom.game.scrollIntoView();\n  }\n\n  _moveCells(direction) {\n    if (!this._isPlaying) {\n      return;\n    }\n\n    const newFieldData = [];\n\n    switch (direction) {\n      case 'left': {\n        for (let i = 0; i < this._fieldSize; i++) {\n          const row = this._field[i];\n          const rowData = [];\n\n          for (let j = 0; j < this._fieldSize; j++) {\n            const cell = row[j];\n\n            if (!cell.value) {\n              continue;\n            }\n\n            const previousCell = rowData.length\n              && rowData[rowData.length - 1];\n\n            if (\n              previousCell\n              && !previousCell.isMerged\n              && previousCell.value === cell.value\n            ) {\n              previousCell.value += cell.value;\n              previousCell.isMerged = true;\n              this.score += previousCell.value;\n\n              continue;\n            }\n\n            rowData.push({\n              value: cell.value,\n              isMerged: false,\n            });\n          }\n\n          const cellsCount = rowData.length;\n\n          if (cellsCount < this._fieldSize) {\n            for (let i = 1; i <= this._fieldSize - cellsCount; i++) {\n              rowData.push({\n                value: 0,\n              });\n            }\n          }\n\n          newFieldData.push(rowData);\n        }\n\n        break;\n      }\n\n      case 'right': {\n        for (let i = 0; i < this._fieldSize; i++) {\n          const row = this._field[i];\n          const rowData = [];\n\n          for (let j = this._fieldSize - 1; j >= 0; j--) {\n            const cell = row[j];\n\n            if (!cell.value) {\n              continue;\n            }\n\n            const previousCell = rowData.length\n              && rowData[0];\n\n            if (\n              previousCell\n              && !previousCell.isMerged\n              && previousCell.value === cell.value\n            ) {\n              previousCell.value += cell.value;\n              previousCell.isMerged = true;\n              this.score += previousCell.value;\n\n              continue;\n            }\n\n            rowData.unshift({\n              value: cell.value,\n              isMerged: false,\n            });\n          }\n\n          const cellsCount = rowData.length;\n\n          if (cellsCount < this._fieldSize) {\n            for (let i = 1; i <= this._fieldSize - cellsCount; i++) {\n              rowData.unshift({\n                value: 0,\n              });\n            }\n          }\n\n          newFieldData.push(rowData);\n        }\n\n        break;\n      }\n\n      case 'up': {\n        const colsData = [];\n\n        for (let i = 0; i < this._fieldSize; i++) {\n          const colData = [];\n\n          for (let j = 0; j < this._fieldSize; j++) {\n            const cell = this._field[j][i];\n\n            if (!cell.value) {\n              continue;\n            }\n\n            const previousCell = colData.length\n              && colData[colData.length - 1];\n\n            if (\n              previousCell\n              && !previousCell.isMerged\n              && previousCell.value === cell.value\n            ) {\n              previousCell.value += cell.value;\n              previousCell.isMerged = true;\n              this.score += previousCell.value;\n\n              continue;\n            }\n\n            colData.push({\n              value: cell.value,\n              isMerged: false,\n            });\n          }\n\n          const cellsCount = colData.length;\n\n          if (cellsCount < this._fieldSize) {\n            for (let i = 1; i <= this._fieldSize - cellsCount; i++) {\n              colData.push({\n                value: 0,\n              });\n            }\n          }\n\n          colsData.push(colData);\n        }\n\n        for (let i = 0; i < this._fieldSize; i++) {\n          for (let j = 0; j < this._fieldSize; j++) {\n            newFieldData[j] = newFieldData[j] || [];\n            newFieldData[j].push(colsData[i][j]);\n          }\n        }\n\n        break;\n      }\n\n      case 'down': {\n        const colsData = [];\n\n        for (let i = 0; i < this._fieldSize; i++) {\n          const colData = [];\n\n          for (let j = this._fieldSize - 1; j >= 0; j--) {\n            const cell = this._field[j][i];\n\n            if (!cell.value) {\n              continue;\n            }\n\n            const previousCell = colData.length\n              && colData[0];\n\n            if (\n              previousCell\n              && !previousCell.isMerged\n              && previousCell.value === cell.value\n            ) {\n              previousCell.value += cell.value;\n              previousCell.isMerged = true;\n              this.score += previousCell.value;\n\n              continue;\n            }\n\n            colData.unshift({\n              value: cell.value,\n              isMerged: false,\n            });\n          }\n\n          const cellsCount = colData.length;\n\n          if (cellsCount < this._fieldSize) {\n            for (let i = 1; i <= this._fieldSize - cellsCount; i++) {\n              colData.unshift({\n                value: 0,\n              });\n            }\n          }\n\n          colsData.push(colData);\n        }\n\n        for (let i = 0; i < this._fieldSize; i++) {\n          for (let j = 0; j < this._fieldSize; j++) {\n            newFieldData[j] = newFieldData[j] || [];\n            newFieldData[j].push(colsData[i][j]);\n          }\n        }\n\n        break;\n      }\n    }\n\n    const hasBeenChanged = this._fillField(newFieldData);\n\n    if (hasBeenChanged) {\n      this._checkGameWin();\n      this._insertRandomCells();\n      this._checkGameLose();\n    }\n  }\n\n  _isNextMovementPossible() {\n    if (this._getFreeCells().length > 0) {\n      return true;\n    }\n\n    const hasTwoSameCellsInARow = this._field.some(row => {\n      for (let i = 0; i < this._fieldSize - 1; i++) {\n        if (row[i].value === row[i + 1].value) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n\n    let hasTwoSameCellsInACol = false;\n\n    for (let i = 0; i < this._fieldSize; i++) {\n      if (hasTwoSameCellsInACol) {\n        break;\n      }\n\n      for (let j = 0; j < this._fieldSize - 1; j++) {\n        if (this._field[j][i].value === this._field[j + 1][i].value) {\n          hasTwoSameCellsInACol = true;\n          break;\n        }\n      }\n    }\n\n    return hasTwoSameCellsInARow || hasTwoSameCellsInACol;\n  }\n\n  _checkGameWin() {\n    if (this.maxValue === 2048) {\n      this._userHasWon();\n    }\n  }\n\n  _checkGameLose() {\n    if (!this._isNextMovementPossible()) {\n      this._userHasLost();\n    }\n  }\n\n  _userHasWon() {\n    this._isPlaying = false;\n\n    this._toggleStartControl();\n\n    this._hideMessages({\n      start: true,\n      win: false,\n      lose: true,\n      hint: true,\n    });\n\n    party.confetti(this._dom.field, {\n      count: party.variation.range(50, 100),\n      shapes: ['roundedRectangle'],\n    });\n  }\n\n  _userHasLost() {\n    this._isPlaying = false;\n\n    this._toggleStartControl();\n\n    this._hideMessages({\n      start: true,\n      win: true,\n      lose: false,\n      hint: true,\n    });\n  }\n\n  _hideMessages(messages = {}) {\n    for (const key in messages) {\n      this._dom.messages[key].classList.toggle('hidden', messages[key]);\n    }\n  }\n\n  _toggleStartControl(isStart = true) {\n    this._dom.controls.start.classList.remove(isStart ? 'restart' : 'start');\n    this._dom.controls.start.classList.add(isStart ? 'start' : 'restart');\n    this._dom.controls.start.innerText = isStart ? 'Start' : 'Reset';\n\n    this._dom.controls.start.setAttribute(\n      'title',\n      isStart ? 'Press Enter to start the game' : 'Press R to reset the game',\n    );\n  }\n\n  create() {\n    this._initGame();\n  }\n\n  start() {\n    this._clearField();\n    this._activateGame();\n\n    this._toggleStartControl(false);\n\n    this._hideMessages({\n      start: true,\n      win: true,\n      lose: true,\n      hint: false,\n    });\n\n    this._dom.size.setAttribute('disabled', true);\n\n    this._isPlaying = true;\n\n    this._insertRandomCells(\n      this._getRandomInt(1, Math.ceil(this._fieldSize / 2))\n    );\n  }\n\n  restart() {\n    this._clearField();\n    this._activateGame();\n\n    this._toggleStartControl();\n\n    this._hideMessages({\n      start: false,\n      win: true,\n      lose: true,\n      hint: true,\n    });\n\n    this._dom.size.removeAttribute('disabled');\n\n    this._isPlaying = false;\n    this.score = 0;\n    this._maxValue = 0;\n  }\n\n  moveLeft() {\n    this._moveCells('left');\n  }\n\n  moveRight() {\n    this._moveCells('right');\n  }\n\n  moveUp() {\n    this._moveCells('up');\n  }\n\n  moveDown() {\n    this._moveCells('down');\n  }\n}\n\nmodule.exports = Game2048;\n","'use strict';\n\nconst Game2048 = require('./classes/Game2048');\n\nconst addGameBtn = document.querySelector('.page__button-new');\n\naddGameBtn.addEventListener('click', () => {\n  const gameContainer = document.createElement('section');\n\n  gameContainer.className = 'app';\n  addGameBtn.before(gameContainer);\n\n  const newGame = new Game2048(gameContainer, 4);\n\n  newGame.create();\n});\n\nconst baseGame = new Game2048('.app', 4);\n\nbaseGame.create();\n"]}